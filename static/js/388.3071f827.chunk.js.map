{"version":3,"file":"static/js/388.3071f827.chunk.js","mappings":"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","sources":["components/PhonebookForms/ContactForm.jsx","components/PhonebookForms/ContactList.jsx","components/PhonebookForms/Filter.jsx","components/PhonebookForms/PhonebookForm.jsx","webpack://react-homework-template/./src/Styles/PageStyles.module.css?d1db","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styles from '../../Styles/PageStyles.module.css';\n\nexport const ContactForm = ({\n  formId,\n  type,\n  inputName,\n  value,\n  pattern,\n  title,\n  setName,\n  inputRef,\n  placeholder,\n}) => {\n  return (\n    <label htmlFor={formId}>\n      {inputName}\n      <input\n        ref={inputRef}\n        onChange={setName}\n        id={formId}\n        type={type}\n        name={inputName}\n        value={value}\n        pattern={pattern}\n        title={title}\n        placeholder={placeholder}\n        required\n        className={styles.input__field}\n      />\n    </label>\n  );\n};\n","import styles from '../../Styles/PageStyles.module.css';\n\nexport const ContactList = ({ contacts, filter, deletionHandler }) => {\n  console.log('contacts', contacts.items);\n  return (\n    <ul className={styles.contact__list}>\n      {{ filter } === ''\n        ? contacts.items.map(contact => (\n            <li key={contact.id} className={styles.contact__listItem}>\n              {contact.name}: {contact.number}\n              <button type=\"button\" onClick={() => deletionHandler(contact.id)}>\n                Delete\n              </button>\n            </li>\n          ))\n        : contacts.items\n            .filter(contact =>\n              contact.name.toLowerCase().includes(filter.toLowerCase())\n            )\n            .map(contact => (\n              <li key={contact.id} className={styles.contact__listItem}>\n                {contact.name}: {contact.number}\n                <button\n                  className={styles.input__button}\n                  type=\"button\"\n                  onClick={() => deletionHandler(contact.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n    </ul>\n  );\n};\n","import styles from '../../Styles/PageStyles.module.css';\n\nexport const Filter = ({\n  setName,\n  inputId,\n  type,\n  inputName,\n  value,\n  placeholder,\n}) => {\n  return (\n    <input\n      onChange={setName}\n      id={inputId}\n      type={type}\n      name={inputName}\n      value={value}\n      placeholder={placeholder}\n      className={styles.input__field}\n    />\n  );\n};\n","import { useState, useEffect, useRef, } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { nanoid } from 'nanoid';\nimport { ContactForm } from 'components/PhonebookForms/ContactForm';\nimport { ContactList } from 'components/PhonebookForms/ContactList';\nimport { Filter } from 'components/PhonebookForms/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { contactReducer } from '../../store/contactReducers';\n\nimport { fetchContacts, removeContact, saveContact } from '../../api/requests';\n\nimport styles from '../../Styles/PageStyles.module.css';\n\n\nconst PhonebookForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputRef = useRef();\n  const nameId = useRef(nanoid());\n  const numberId = useRef(nanoid());\n  const filterId = useRef(nanoid());\n\n  const dispatch = useDispatch();\n  // const setContacts = payload =>\n  //   dispatch(contactReducer.actions.addContact(payload)); \n  const contacts = useSelector(state => state.contacts);\n\n  const setFilter = payload =>\n    dispatch(contactReducer.actions.filterContacts(payload));\n  const filter = useSelector(state => state.contacts.filter);\n\n  const setDeletion = payload =>\n    dispatch(contactReducer.actions.deleteContact(payload));\n\n  const getContactsFromApi = () => dispatch(fetchContacts());\n\n  const saveContactInApi = payload => dispatch(saveContact(payload));\n  const removeContactFromApi = payload => dispatch(removeContact(payload));\n\n  useEffect(() => {\n    getContactsFromApi();\n    inputRef.current.focus();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line \n  }, [contacts]);\n\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    if (contacts.items.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newList = { id: nanoid(), name: name, number: number };\n      console.log('new List', newList);\n      // setContacts(newList);\n      saveContactInApi(newList);\n\n      setName('');\n      setNumber('');\n    }\n  };\n\n  const handleSetName = ev => {\n    setName(ev.target.value);\n  };\n\n  const handleSetNumber = ev => {\n    setNumber(ev.target.value);\n  };\n\n  const handleSetFilter = ev => {\n    setFilter(ev.target.value);\n  };\n\n  const deletionHandler = id => {\n    setDeletion(id);\n    removeContactFromApi(id);\n  };\n\n  return (\n    <div className={styles.container}>\n      <Link to=\"/usermenu\" className={styles.link__menu}>\n        Profile\n      </Link>\n      <h1 className={styles.input__header}>Phonebook</h1>\n      <form onSubmit={handleSubmit}>\n        <ContactForm\n          inputRef={inputRef}\n          formId={nameId.current}\n          type=\"text\"\n          inputName=\"Name\"\n          value={name}\n          setName={handleSetName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter contact's name\"\n        />\n        <ContactForm\n          formId={numberId.current}\n          type=\"tel\"\n          inputName=\"Number\"\n          value={number}\n          setName={handleSetNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter contact's number\"\n        />\n        <button type=\"submit\" className={styles.input__button}>\n          Add contact\n        </button>\n      </form>\n      <h2 className={styles.input__header}>Contacts:</h2>\n      <Filter\n        setName={handleSetFilter}\n        inputId={filterId.current}\n        type=\"text\"\n        inputName=\"Filter\"\n        value={filter}\n        placeholder=\"Enter a phrase to find a contact\"\n      />\n      <ContactList\n        contacts={contacts}\n        filter={filter}\n        deletionHandler={deletionHandler}\n      />\n    </div>\n  );\n};\n\nexport default PhonebookForm;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageStyles_container__j4f+1\",\"input__field\":\"PageStyles_input__field__9n3ER\",\"input__button\":\"PageStyles_input__button__ecN1D\",\"link__text\":\"PageStyles_link__text__5Zgk8\",\"link__menu\":\"PageStyles_link__menu__Ro0Je\",\"contact__list\":\"PageStyles_contact__list__QkM31\",\"contact__listItem\":\"PageStyles_contact__listItem__zmhcw\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["ContactForm","formId","type","inputName","value","pattern","title","setName","inputRef","placeholder","htmlFor","ref","onChange","id","name","required","className","styles","ContactList","contacts","filter","deletionHandler","console","log","items","map","contact","number","onClick","toLowerCase","includes","Filter","inputId","useState","setNumber","useRef","nameId","nanoid","numberId","filterId","dispatch","useDispatch","useSelector","state","useEffect","fetchContacts","current","focus","to","onSubmit","ev","preventDefault","some","alert","newList","payload","saveContact","target","contactReducer","removeContact","removeContactFromApi","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}